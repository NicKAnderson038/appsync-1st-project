DynamoDbComment:
  Type: AWS::DynamoDB::Table
  DeletionPolicy: Retain
  Properties:
    AttributeDefinitions:
      - AttributeName: eventId
        AttributeType: S
      - AttributeName: commentId
        AttributeType: S
    KeySchema:
      - AttributeName: eventId
        KeyType: HASH
      - AttributeName: commentId
        KeyType: RANGE
    ProvisionedThroughput:
      ReadCapacityUnits: 1
      WriteCapacityUnits: 1
    TableName: ${self:provider.environment.COMMENT_TABLE}

DynamoDbEvent:
  Type: AWS::DynamoDB::Table
  DeletionPolicy: Retain
  Properties:
    AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
    KeySchema:
      - AttributeName: id
        KeyType: HASH
    ProvisionedThroughput:
      ReadCapacityUnits: 1
      WriteCapacityUnits: 1
    TableName: ${self:provider.environment.EVENT_TABLE}

# IAM Policy to allow working with DynamoDB
AppSyncDynamoDBPolicy:
  Type: "AWS::IAM::ManagedPolicy"
  Properties:
    Description: "Managed Policy to allow AWS AppSync to access tables in DynamoDB"
    Path: /appsync/
    PolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:DeleteItem
            - dynamodb:UpdateItem
            - dynamodb:Query
            - dynamodb:Scan
          Resource: 
            - { Fn::Join: [ '', [ { Fn::GetAtt: [ DynamoDbComment, Arn ] }, '/*' ] ] }
            - { Fn::Join: [ '', [ { Fn::GetAtt: [ DynamoDbEvent, Arn ] }, '/*' ] ] }

# IAM Role for implementing the AppSync / DynamoDB policy
# DynamoDBRole:
AppSyncDynamoDBServiceRole:
  Type: "AWS::IAM::Role"
  Description: "IAM Role for allowing AppSync to access DynamoDB"
  DependsOn:
    - AppSyncDynamoDBPolicy
  Properties:
    RoleName: "DynamoDB-${self:custom.appSync.serviceRole}-Policy"
    ManagedPolicyArns:
      - Ref: AppSyncDynamoDBPolicy
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Effect: Allow
          Action:
            - sts:AssumeRole
          Principal:
            Service:
              - appsync.amazonaws.com

# Lambda Resource Integration
# AppSyncLambdaServiceRole:
#   Type: "AWS::IAM::Role"
#   Properties:
#     RoleName: "Lambda-${self:custom.appSync.serviceRole}"
#     AssumeRolePolicyDocument:
#       Version: "2012-10-17"
#       Statement:
#         - Effect: "Allow"
#           Principal:
#             Service:
#               - "appsync.amazonaws.com"
#             Action:
#               - "sts:AssumeRole"
#     Policies:
#       - PolicyName: "Lambda-${self:custom.appSync.serviceRole}-Policy"
#         PolicyDocument:
#           Version: "2012-10-17"
#           Statement:
#             - Effect: "Allow"
#               Action:
#                 - "lambda:invokeFunction"
#               Resource:
#                 - "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-dev-graphql"
#                 - "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-dev-graphql:*"